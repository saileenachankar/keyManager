<?php

namespace keyManager\keyBundle\Form;

use keyManager\keyBundle\Entity\tpenew;
use keyManager\keyBundle\Form\EventListener\AddClientNewFieldSubscriber;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\Form\FormEvent;
use Symfony\Component\Form\FormEvents;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;
use keyManager\keyBundle\Form\EventListener\AddTpenewFieldSubscriber;

class KeyNewType extends AbstractType
{
        /**
     * @param FormBuilderInterface $builder
     * @param array $options
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $propertyPathToTpe = 'tpenew';
        $builder
            ->addEventSubscriber(new AddTpenewFieldSubscriber($propertyPathToTpe))
            ->addEventSubscriber(new AddClientNewFieldSubscriber($propertyPathToTpe));


        $builder
            ->add('startDate', 'date', array('widget' => 'single_text'))
            ->add('endDate', 'date', array('widget' => 'single_text'))
            ->add('keyName')
            ->add('keyValid')
          //  ->add('tpenew', new tpenewType())

//
//            ->add('tpenew', 'entity',  array(
//                    'class'=>'keyManagerkeyBundle:tpenew',
//                    'property'=>'tpeNum',
//                    ))


           /* ->add('tpenew', 'collection', array('type'=> 'entity', 'options'=>array('class'=>'keyManagerkeyBundle:tpenew')))*/

            ->add('ajouter une clef', 'submit');

//        $builder->addEventListener(FormEvents::PRE_SET_DATA, function (FormEvent $event)
//            {
//                $product = $event->getData();
//                $form = $event->getForm();
//
//                if ($product === $product->getStartDate()) {
//                    $form->add('tpenew', 'entity',  array(
//                            'class'=>'keyManagerkeyBundle:tpenew',
//                            'property'=>'tpeNum',
//                        ));}
//            });
//
//        $builder->get('startDate')->addEventListener(
//            FormEvents::POST_SUBMIT,
//            function (FormEvent $event)  {
//                // It's important here to fetch $event->getForm()->getData(), as
//                // $event->getData() will get you the client data (that is, the ID)
//                $sport = $event->getForm()->getData();
//
//                // since we've added the listener to the child, we'll have to pass on
//                // the parent to the callback functions!
//
//            }
//        );



    }

    /**
     * @param OptionsResolverInterface $resolver
     */
    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'keyManager\keyBundle\Entity\KeyNew'
        ));
    }

    /**
     * @return string
     */
    public function getName()
    {
        return 'keymanager_keybundle_keynew';
    }
}
